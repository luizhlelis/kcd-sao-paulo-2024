version: "3.4"
services:
  order-api:
    container_name: order-api
    environment:
      ConnectionStrings__OrderContext: "Data Source=sql-server-database; Initial Catalog=Order; User Id=sa; Password=1StrongPassword*; TrustServerCertificate=True"
      Otlp__Endpoint: "http://otel-collector:4317"
      RabbitMq__HostName: "rabbit"
    working_dir: /app
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - API_PROJECT_FOLDER=Order.Api
        - API_PROJECT_NAME=Order.Api.csproj
    depends_on:
      - sql-server-database
      - rabbit
      - otel-collector
      - migrations
    command: "dotnet Order.Api.dll"
    ports:
      - "80:8080"
  
  catalog-consumer:
    container_name: catalog-consumer
    environment:
      ConnectionStrings__CatalogContext: "Data Source=sql-server-database; Initial Catalog=Catalog; User Id=sa; Password=1StrongPassword*; TrustServerCertificate=True"
      Otlp__Endpoint: "http://otel-collector:4317"
      RabbitMq__HostName: "rabbit"
    working_dir: /app
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - API_PROJECT_FOLDER=Catalog.Consumer
        - API_PROJECT_NAME=Catalog.Consumer.csproj
    depends_on:
      - sql-server-database
      - otel-collector
      - rabbit
      - migrations
    command: "dotnet Catalog.Consumer.dll"
    ports:
      - "85:8080"

  sql-server-database:
    container_name: sql-server-database
    image: mcr.microsoft.com/azure-sql-edge
    environment:
      MSSQL_SA_PASSWORD: 1StrongPassword*
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"

  rabbit:
    image: rabbitmq:3.9.29-management
    container_name: rabbit
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
      - RABBITMQ_DEFAULT_VHOST=my_vhost
  
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.92.0
    command: [ "--config=/etc/otel-collector-config.yml" ]
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - "4317:4317" # OTLP GRPC receiver
      - "4318:4318" # OTLP GRPC receiver
    depends_on:
      - tempo
      - loki
      - prometheus
        
  migrations:
    container_name: migrations
    build:
      context: .
      dockerfile: migrations.Dockerfile
    working_dir: /app
    environment:
      PATH: "$PATH:$HOME/:dotnet/tools/"
      API_PROJECT: Order.Api/Order.Api.csproj
      API_SQL_CONTEXT_CLASS: OrderContext
      CONSUMER_PROJECT: Catalog.Consumer/Catalog.Consumer.csproj
      CONSUMER_SQL_CONTEXT_CLASS: CatalogContext
      ConnectionStrings__OrderContext: "Data Source=sql-server-database; Initial Catalog=Order; User Id=sa; Password=1StrongPassword*; TrustServerCertificate=True"
      ConnectionStrings__CatalogContext: "Data Source=sql-server-database; Initial Catalog=Catalog; User Id=sa; Password=1StrongPassword*; TrustServerCertificate=True"
    command: "bash ./Scripts/apply-existing-migrations.sh"
    depends_on:
      - sql-server-database

  tempo:
    image: grafana/tempo:main-8dad92c
    command:
      - -config.file=/etc/tempo.yaml
    volumes:
      - ./tempo.yaml:/etc/tempo.yaml
    ports:
      - "3200:3200"

  loki:
    image: grafana/loki:main-522efb9
    command:
      - -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
        
  prometheus:
    image: prom/prometheus:v2.49.1
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:9.5.15
    ports:
      - 3000:3000
    volumes:
      - ./grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    depends_on:
      - prometheus
      - tempo
      - loki

#  jaeger:
#    image: jaegertracing/all-in-one:latest
#    ports:
#      - "16686:16686"
#      - "14250"
#
#  zipkin:
#    image: openzipkin/zipkin
#    container_name: zipkin
#    ports:
#      - "9411:9411"